name: Go

on: 
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches: 
      - main

env:
  ARTIFACTORY_URL: ghcr.io
  ARTIFACTORY_USER: ${{ github.actor }}
  ARTIFACTORY_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  unit_tests:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          go-version: [ '1.21.x' ]

      steps:
        - uses: actions/checkout@v4
        - name: Setup Go ${{ matrix.go-version }}
          uses: actions/setup-go@v4
          with:
            go-version: ${{ matrix.go-version }}
        # You can test your matrix by printing the current Go version
        - name: Display Go version
          run: go version
        
        - name: Install dependencies
          run: go get ./...

        - name: Unit Tests
          run: |
            mkdir testresults
            go test -v -coverprofile TestCoverage.out ./... -json > ./testresults/TestResults.json
            go tool cover -html TestCoverage.out -o ./testresults/TestCoverage.html

        - name: Upload Go test results
          uses: actions/upload-artifact@v3
          with:
            name: TestResults-${{ matrix.go-version }}
            path: ./testresults/*

  build_and_package:
    runs-on: ubuntu-latest
    needs: unit_tests
    strategy:
      matrix:
        go-version: [ '1.21.x' ]
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      # You can test your matrix by printing the current Go version
      - name: Display Go version
        run: go version

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with: 
          registry: ${{ env.ARTIFACTORY_URL }}
          username: ${{ env.ARTIFACTORY_USER }}
          password: ${{ env.ARTIFACTORY_TOKEN }}

      - name: Build and Publish Sample Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: samplego:latest

